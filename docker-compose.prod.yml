version: '3.8'

services:
  # Frontend Service (Production Build)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
    ports:
      - "3000:80"
    networks:
      - finance-network
    restart: unless-stopped

  # Backend API Service (Production)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - MONGODB_URI=mongodb://mongodb:27017/finance_dashboard
      - JWT_SECRET=${JWT_SECRET:-your_jwt_secret_change_in_production}
      - CORS_ORIGIN=http://localhost,http://127.0.0.1
      - EXCHANGE_RATE_API_KEY=${EXCHANGE_RATE_API_KEY:-your_exchange_rate_api_key}
    depends_on:
      - mongodb
    networks:
      - finance-network
    restart: unless-stopped

  # MongoDB Database Service
  mongodb:
    image: mongo:7.0
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD:-password123}
      - MONGO_INITDB_DATABASE=finance_dashboard
    volumes:
      - mongodb_data:/data/db
      - ./mongodb/init:/docker-entrypoint-initdb.d
    networks:
      - finance-network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
    networks:
      - finance-network
    restart: unless-stopped

networks:
  finance-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
